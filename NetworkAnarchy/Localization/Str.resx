<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="key_cycleModesLeft" xml:space="preserve">
    <value>Cycle Modes Left</value>
  </data>
  <data name="key_cycleModesRight" xml:space="preserve">
    <value>Cycle Modes Right</value>
  </data>
  <data name="key_elevationDown" xml:space="preserve">
    <value>Elevation Down</value>
  </data>
  <data name="key_elevationReset" xml:space="preserve">
    <value>Reset Elevation</value>
  </data>
  <data name="key_elevationStepDown" xml:space="preserve">
    <value>Elevation Step Down</value>
  </data>
  <data name="key_elevationStepUp" xml:space="preserve">
    <value>Elevation Step Up</value>
  </data>
  <data name="key_elevationUp" xml:space="preserve">
    <value>Elevation Up</value>
  </data>
  <data name="key_pressAnyKey" xml:space="preserve">
    <value>Press any key</value>
  </data>
  <data name="key_toggleAnarchy" xml:space="preserve">
    <value>Toggle Anarchy</value>
  </data>
  <data name="key_toggleBending" xml:space="preserve">
    <value>Toggle Bending</value>
  </data>
  <data name="key_toggleCollision" xml:space="preserve">
    <value>Toggle Collision</value>
  </data>
  <data name="key_toggleGrid" xml:space="preserve">
    <value>Toggle Editor Grid</value>
  </data>
  <data name="key_toggleSnapping" xml:space="preserve">
    <value>Toggle Snapping</value>
  </data>
  <data name="key_toggleStraightSlopes" xml:space="preserve">
    <value>Toggle Straight Slopes</value>
  </data>
  <data name="mod_Description" xml:space="preserve">
    <value>More tool options for roads and other networks</value>
  </data>
  <data name="options_enableDebugLogging" xml:space="preserve">
    <value>Enable debug messages logging</value>
  </data>
  <data name="options_enableDebugLoggingTooltip" xml:space="preserve">
    <value>If checked, additional debug messages will be logged.</value>
  </data>
  <data name="options_maxTurnAngle" xml:space="preserve">
    <value>Max turn angle</value>
  </data>
  <data name="options_reduceCatenaries" xml:space="preserve">
    <value>Reduce rail catenary masts</value>
  </data>
  <data name="options_reduceCatenariesTooltip" xml:space="preserve">
    <value>Reduce the number of catenary mast of rail lines from 3 to 1 per segment.</value>
  </data>
  <data name="options_resetToolWindowPosition" xml:space="preserve">
    <value>Reset tool window position</value>
  </data>
  <data name="options_showElevationStepSlider" xml:space="preserve">
    <value>Show elevation step slider</value>
  </data>
  <data name="options_showElevationStepSliderTooltip" xml:space="preserve">
    <value>Show slider for changing the elevation step, from 1m to 12m.</value>
  </data>
  <data name="options_showLabels" xml:space="preserve">
    <value>Show Labels</value>
  </data>
  <data name="options_showLabelsTooltip" xml:space="preserve">
    <value>Disable to save some screen space</value>
  </data>
  <data name="options_showMaxSegmentLengthSlider" xml:space="preserve">
    <value>Show max segment length slider</value>
  </data>
  <data name="options_showMaxSegmentLengthSliderTooltip" xml:space="preserve">
    <value>Show slider for changing the maximum segment length, from 4m to 256m (default is 96m).</value>
  </data>
  <data name="options_tramMaxTurnAngle" xml:space="preserve">
    <value>Change max turn angle for more realistic tram tracks turns</value>
  </data>
  <data name="options_tramMaxTurnAngleTooltip" xml:space="preserve">
    <value>Change all roads with tram tracks max turn angle by the value below if current value is higher.</value>
  </data>
  <data name="ui_clickForToolOptions" xml:space="preserve">
    <value>Click here for Tool Options</value>
  </data>
  <data name="ui_elevationSliderKeyTip" xml:space="preserve">
    <value>{0} and {1} to change elevation step</value>
    <comment>{0} and {1} will be replaced by the keybindings for elevation steps</comment>
  </data>
  <data name="ui_elevationStep" xml:space="preserve">
    <value>Elevation Step:</value>
    <comment>Keep the ":" if used in your language</comment>
  </data>
  <data name="ui_grid" xml:space="preserve">
    <value>Show Editor Grid</value>
  </data>
  <data name="ui_maxSegmentLength" xml:space="preserve">
    <value>Max Segment Length:</value>
    <comment>Keep the ":" if used in your language</comment>
  </data>
  <data name="ui_modeBridge" xml:space="preserve">
    <value>Bridge: Forces the use of bridge pieces if available</value>
  </data>
  <data name="ui_modeCycleKeyTip" xml:space="preserve">
    <value>{0} and {1} to cycle modes</value>
    <comment>{0} and {1} will be replaced by the keybindings for cycling modes</comment>
  </data>
  <data name="ui_modeElevated" xml:space="preserve">
    <value>Elevated: Forces the use of elevated pieces if available</value>
  </data>
  <data name="ui_modeGround" xml:space="preserve">
    <value>Ground: Forces the ground to follow the elevation of the road</value>
  </data>
  <data name="ui_modeNormal" xml:space="preserve">
    <value>Normal: Unmodded road placement behavior</value>
  </data>
  <data name="ui_modes" xml:space="preserve">
    <value>Modes:</value>
    <comment>Keep the ":" if used in your language</comment>
  </data>
  <data name="ui_modeTunnel" xml:space="preserve">
    <value>Tunnel: Forces the use of tunnel pieces if available</value>
  </data>
  <data name="ui_toggleAnarchy" xml:space="preserve">
    <value>Toggle anarchy</value>
  </data>
  <data name="ui_toggleBending" xml:space="preserve">
    <value>Toggle road bending</value>
  </data>
  <data name="ui_toggleCollision" xml:space="preserve">
    <value>Toggle collision</value>
  </data>
  <data name="ui_toggleSlope" xml:space="preserve">
    <value>Toggle staight slope (don't follow terrain shape)</value>
  </data>
  <data name="ui_toggleSnapping" xml:space="preserve">
    <value>Toggle node snapping</value>
  </data>
</root>